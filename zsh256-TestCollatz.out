==134== Memcheck, a memory error detector
==134== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==134== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==134== Command: ./TestCollatz
==134==
Running main() from gtest_main.cc
[==========] Running 16 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 16 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (27 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (5 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (5 ms)
[ RUN      ] CollatzFixture.read_4
[       OK ] CollatzFixture.read_4 (4 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (8 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (5 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (5 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (7 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (59 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (4 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (5 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (9 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (5 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (3 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (17 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (79 ms)
[----------] 16 tests from CollatzFixture (271 ms total)

[----------] Global test environment tear-down
[==========] 16 tests from 1 test case ran. (337 ms total)
[  PASSED  ] 16 tests.
==134==
==134== HEAP SUMMARY:
==134==     in use at exit: 72,704 bytes in 1 blocks
==134==   total heap usage: 284 allocs, 283 frees, 139,785 bytes allocated
==134==
==134== LEAK SUMMARY:
==134==    definitely lost: 0 bytes in 0 blocks
==134==    indirectly lost: 0 bytes in 0 blocks
==134==      possibly lost: 0 bytes in 0 blocks
==134==    still reachable: 72,704 bytes in 1 blocks
==134==         suppressed: 0 bytes in 0 blocks
==134== Rerun with --leak-check=full to see details of leaked memory
==134==
==134== For counts of detected and suppressed errors, rerun with: -v
==134== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 35
Branches executed:100.00% of 28
Taken at least once:85.71% of 28
Calls executed:100.00% of 13
Creating 'Collatz.c++.gcov'
