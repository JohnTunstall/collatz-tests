==198== Memcheck, a memory error detector
==198== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==198== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==198== Command: ./TestCollatz
==198== 
Running main() from gtest_main.cc
[==========] Running 15 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 15 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (27 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (4 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (5 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (3 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (3 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (49 ms)
[ RUN      ] CollatzFixture.cycle_1
[       OK ] CollatzFixture.cycle_1 (2 ms)
[ RUN      ] CollatzFixture.cycle_2
[       OK ] CollatzFixture.cycle_2 (3 ms)
[ RUN      ] CollatzFixture.cycle_3
[       OK ] CollatzFixture.cycle_3 (2 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (9 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (4 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (4 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (7 ms)
[----------] 15 tests from CollatzFixture (142 ms total)

[----------] Global test environment tear-down
[==========] 15 tests from 1 test case ran. (205 ms total)
[  PASSED  ] 15 tests.
==198== 
==198== HEAP SUMMARY:
==198==     in use at exit: 72,704 bytes in 1 blocks
==198==   total heap usage: 274 allocs, 273 frees, 137,801 bytes allocated
==198== 
==198== LEAK SUMMARY:
==198==    definitely lost: 0 bytes in 0 blocks
==198==    indirectly lost: 0 bytes in 0 blocks
==198==      possibly lost: 0 bytes in 0 blocks
==198==    still reachable: 72,704 bytes in 1 blocks
==198==         suppressed: 0 bytes in 0 blocks
==198== Rerun with --leak-check=full to see details of leaked memory
==198== 
==198== For counts of detected and suppressed errors, rerun with: -v
==198== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 46
Branches executed:100.00% of 38
Taken at least once:78.95% of 38
Calls executed:100.00% of 16
Creating 'Collatz.c++.gcov'
