==154== Memcheck, a memory error detector
==154== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==154== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==154== Command: ./TestCollatz
==154== 
Running main() from gtest_main.cc
[==========] Running 18 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 18 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (19 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (3 ms)
[ RUN      ] CollatzFixture.length_1
[       OK ] CollatzFixture.length_1 (6 ms)
[ RUN      ] CollatzFixture.length_2
[       OK ] CollatzFixture.length_2 (40 ms)
[ RUN      ] CollatzFixture.length_3
[       OK ] CollatzFixture.length_3 (4 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (5 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (11 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (3 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (29 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (6308 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (7 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (3 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (3 ms)
[ RUN      ] CollatzFixture.print_4
[       OK ] CollatzFixture.print_4 (3 ms)
[ RUN      ] CollatzFixture.print_5
[       OK ] CollatzFixture.print_5 (4 ms)
[ RUN      ] CollatzFixture.print_6
[       OK ] CollatzFixture.print_6 (2 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (8 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (81 ms)
[----------] 18 tests from CollatzFixture (6553 ms total)

[----------] Global test environment tear-down
[==========] 18 tests from 1 test case ran. (6605 ms total)
[  PASSED  ] 18 tests.
==154== 
==154== HEAP SUMMARY:
==154==     in use at exit: 72,704 bytes in 1 blocks
==154==   total heap usage: 154,071 allocs, 154,070 frees, 6,295,256 bytes allocated
==154== 
==154== LEAK SUMMARY:
==154==    definitely lost: 0 bytes in 0 blocks
==154==    indirectly lost: 0 bytes in 0 blocks
==154==      possibly lost: 0 bytes in 0 blocks
==154==    still reachable: 72,704 bytes in 1 blocks
==154==         suppressed: 0 bytes in 0 blocks
==154== Rerun with --leak-check=full to see details of leaked memory
==154== 
==154== For counts of detected and suppressed errors, rerun with: -v
==154== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:96.00% of 50
Branches executed:100.00% of 36
Taken at least once:77.78% of 36
Calls executed:95.83% of 24
Creating 'Collatz.c++.gcov'
