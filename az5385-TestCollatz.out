==156== Memcheck, a memory error detector
==156== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==156== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==156== Command: ./TestCollatz
==156== 
Running main() from gtest_main.cc
[==========] Running 15 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 15 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (19 ms)
[ RUN      ] CollatzFixture.cycle_length_1
[       OK ] CollatzFixture.cycle_length_1 (33 ms)
[ RUN      ] CollatzFixture.cycle_length_2
[       OK ] CollatzFixture.cycle_length_2 (31 ms)
[ RUN      ] CollatzFixture.cycle_length_3
[       OK ] CollatzFixture.cycle_length_3 (30 ms)
[ RUN      ] CollatzFixture.cycle_length_4
[       OK ] CollatzFixture.cycle_length_4 (30 ms)
[ RUN      ] CollatzFixture.cycle_length_5
[       OK ] CollatzFixture.cycle_length_5 (31 ms)
[ RUN      ] CollatzFixture.cycle_length_6
[       OK ] CollatzFixture.cycle_length_6 (29 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (29 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (27 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (33 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (29 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (73 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (32 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (7 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (112 ms)
[----------] 15 tests from CollatzFixture (560 ms total)

[----------] Global test environment tear-down
[==========] 15 tests from 1 test case ran. (606 ms total)
[  PASSED  ] 15 tests.
==156== 
==156== HEAP SUMMARY:
==156==     in use at exit: 72,704 bytes in 1 blocks
==156==   total heap usage: 285 allocs, 284 frees, 64,136,716 bytes allocated
==156== 
==156== LEAK SUMMARY:
==156==    definitely lost: 0 bytes in 0 blocks
==156==    indirectly lost: 0 bytes in 0 blocks
==156==      possibly lost: 0 bytes in 0 blocks
==156==    still reachable: 72,704 bytes in 1 blocks
==156==         suppressed: 0 bytes in 0 blocks
==156== Rerun with --leak-check=full to see details of leaked memory
==156== 
==156== For counts of detected and suppressed errors, rerun with: -v
==156== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:91.89% of 37
Branches executed:100.00% of 38
Taken at least once:76.32% of 38
Calls executed:88.46% of 26
Creating 'Collatz.c++.gcov'