==12862== Memcheck, a memory error detector
==12862== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==12862== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==12862== Command: ./TestCollatz
==12862== 
Running main() from gtest_main.cc
[==========] Running 20 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 20 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (16 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (3 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (4 ms)
[ RUN      ] CollatzFixture.read_4
[       OK ] CollatzFixture.read_4 (4 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (3 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_reversed_range
[       OK ] CollatzFixture.eval_reversed_range (1 ms)
[ RUN      ] CollatzFixture.eval_small_range
[       OK ] CollatzFixture.eval_small_range (1 ms)
[ RUN      ] CollatzFixture.cycle_length_1
[       OK ] CollatzFixture.cycle_length_1 (2 ms)
[ RUN      ] CollatzFixture.cycle_length_2
[       OK ] CollatzFixture.cycle_length_2 (2 ms)
[ RUN      ] CollatzFixture.cycle_length_3
[       OK ] CollatzFixture.cycle_length_3 (1 ms)
[ RUN      ] CollatzFixture.cycle_length_4
[       OK ] CollatzFixture.cycle_length_4 (2 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (7 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (2 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (2 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (5 ms)
[ RUN      ] CollatzFixture.solve_backwards_1
[       OK ] CollatzFixture.solve_backwards_1 (2 ms)
[ RUN      ] CollatzFixture.solve_zero_range_1
[       OK ] CollatzFixture.solve_zero_range_1 (3 ms)
[----------] 20 tests from CollatzFixture (77 ms total)

[----------] Global test environment tear-down
[==========] 20 tests from 1 test case ran. (104 ms total)
[  PASSED  ] 20 tests.
==12862== 
==12862== HEAP SUMMARY:
==12862==     in use at exit: 0 bytes in 0 blocks
==12862==   total heap usage: 537 allocs, 537 frees, 79,698 bytes allocated
==12862== 
==12862== All heap blocks were freed -- no leaks are possible
==12862== 
==12862== For counts of detected and suppressed errors, rerun with: -v
==12862== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 35
Branches executed:100.00% of 32
Taken at least once:78.13% of 32
Calls executed:83.33% of 18
Creating 'Collatz.c++.gcov'
