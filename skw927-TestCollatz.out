==166== Memcheck, a memory error detector
==166== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==166== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==166== Command: ./TestCollatz
==166== 
Running main() from gtest_main.cc
[==========] Running 17 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 17 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (24 ms)
[ RUN      ] CollatzFixture.cache_1
[       OK ] CollatzFixture.cache_1 (2 ms)
[ RUN      ] CollatzFixture.cache_2
[       OK ] CollatzFixture.cache_2 (30 ms)
[ RUN      ] CollatzFixture.cache_3
[       OK ] CollatzFixture.cache_3 (9 ms)
[ RUN      ] CollatzFixture.len_1
[       OK ] CollatzFixture.len_1 (2 ms)
[ RUN      ] CollatzFixture.len_2
[       OK ] CollatzFixture.len_2 (3 ms)
[ RUN      ] CollatzFixture.len_3
[       OK ] CollatzFixture.len_3 (2 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (3 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (3 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (3 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (2 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (2 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (2 ms)
[ RUN      ] CollatzFixture.eval_8
[       OK ] CollatzFixture.eval_8 (3 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (7 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (8 ms)
[----------] 17 tests from CollatzFixture (120 ms total)

[----------] Global test environment tear-down
[==========] 17 tests from 1 test case ran. (174 ms total)
[  PASSED  ] 17 tests.
==166== 
==166== HEAP SUMMARY:
==166==     in use at exit: 72,704 bytes in 1 blocks
==166==   total heap usage: 290 allocs, 289 frees, 140,100 bytes allocated
==166== 
==166== LEAK SUMMARY:
==166==    definitely lost: 0 bytes in 0 blocks
==166==    indirectly lost: 0 bytes in 0 blocks
==166==      possibly lost: 0 bytes in 0 blocks
==166==    still reachable: 72,704 bytes in 1 blocks
==166==         suppressed: 0 bytes in 0 blocks
==166== Rerun with --leak-check=full to see details of leaked memory
==166== 
==166== For counts of detected and suppressed errors, rerun with: -v
==166== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 41
Branches executed:100.00% of 32
Taken at least once:81.25% of 32
Calls executed:100.00% of 25
Creating 'Collatz.c++.gcov'
