==26== Memcheck, a memory error detector
==26== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==26== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==26== Command: ./TestCollatz
==26== 
Running main() from gtest_main.cc
[==========] Running 14 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 14 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (37 ms)
[ RUN      ] CollatzFixture.read_empty
[       OK ] CollatzFixture.read_empty (3 ms)
[ RUN      ] CollatzFixture.read_multiple
[       OK ] CollatzFixture.read_multiple (7 ms)
[ RUN      ] CollatzFixture.eval_1_10
[       OK ] CollatzFixture.eval_1_10 (50 ms)
[ RUN      ] CollatzFixture.eval_100_200
[       OK ] CollatzFixture.eval_100_200 (15 ms)
[ RUN      ] CollatzFixture.eval_201_210
[       OK ] CollatzFixture.eval_201_210 (4 ms)
[ RUN      ] CollatzFixture.eval_900_1000
[       OK ] CollatzFixture.eval_900_1000 (11 ms)
[ RUN      ] CollatzFixture.eval_10_1
[       OK ] CollatzFixture.eval_10_1 (13 ms)
[ RUN      ] CollatzFixture.print_one_line
[       OK ] CollatzFixture.print_one_line (12 ms)
[ RUN      ] CollatzFixture.print_two_lines
[       OK ] CollatzFixture.print_two_lines (6 ms)
[ RUN      ] CollatzFixture.print_line_reverse
[       OK ] CollatzFixture.print_line_reverse (3 ms)
[ RUN      ] CollatzFixture.solve_normal
[       OK ] CollatzFixture.solve_normal (21 ms)
[ RUN      ] CollatzFixture.solve_reverse
[       OK ] CollatzFixture.solve_reverse (17 ms)
[ RUN      ] CollatzFixture.solve_mix
[       OK ] CollatzFixture.solve_mix (17 ms)
[----------] 14 tests from CollatzFixture (264 ms total)

[----------] Global test environment tear-down
[==========] 14 tests from 1 test case ran. (337 ms total)
[  PASSED  ] 14 tests.
==26== 
==26== HEAP SUMMARY:
==26==     in use at exit: 72,704 bytes in 1 blocks
==26==   total heap usage: 1,182 allocs, 1,181 frees, 158,279 bytes allocated
==26== 
==26== LEAK SUMMARY:
==26==    definitely lost: 0 bytes in 0 blocks
==26==    indirectly lost: 0 bytes in 0 blocks
==26==      possibly lost: 0 bytes in 0 blocks
==26==    still reachable: 72,704 bytes in 1 blocks
==26==         suppressed: 0 bytes in 0 blocks
==26== Rerun with --leak-check=full to see details of leaked memory
==26== 
==26== For counts of detected and suppressed errors, rerun with: -v
==26== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 40
Branches executed:100.00% of 30
Taken at least once:76.67% of 30
Calls executed:100.00% of 22
Creating 'Collatz.c++.gcov'
