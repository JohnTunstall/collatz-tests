==735== Memcheck, a memory error detector
==735== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==735== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==735== Command: ./TestCollatz
==735== 
Running main() from gtest_main.cc
[==========] Running 20 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 20 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (24 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (3 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (3 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (2 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (2 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (430 ms)
[ RUN      ] CollatzFixture.cached_eval_1
[       OK ] CollatzFixture.cached_eval_1 (5 ms)
[ RUN      ] CollatzFixture.cached_eval_2
[       OK ] CollatzFixture.cached_eval_2 (2 ms)
[ RUN      ] CollatzFixture.cached_eval_3
[       OK ] CollatzFixture.cached_eval_3 (2 ms)
[ RUN      ] CollatzFixture.cached_eval_4
[       OK ] CollatzFixture.cached_eval_4 (2 ms)
[ RUN      ] CollatzFixture.cached_eval_5
[       OK ] CollatzFixture.cached_eval_5 (3 ms)
[ RUN      ] CollatzFixture.cached_eval_6
[       OK ] CollatzFixture.cached_eval_6 (2 ms)
[ RUN      ] CollatzFixture.cached_eval_7
[       OK ] CollatzFixture.cached_eval_7 (202 ms)
[ RUN      ] CollatzFixture.helper_eval_1
[       OK ] CollatzFixture.helper_eval_1 (2 ms)
[ RUN      ] CollatzFixture.helper_eval_2
[       OK ] CollatzFixture.helper_eval_2 (2 ms)
[ RUN      ] CollatzFixture.helper_eval_3
[       OK ] CollatzFixture.helper_eval_3 (2 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (8 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (6 ms)
[----------] 20 tests from CollatzFixture (758 ms total)

[----------] Global test environment tear-down
[==========] 20 tests from 1 test case ran. (821 ms total)
[  PASSED  ] 20 tests.
==735== 
==735== HEAP SUMMARY:
==735==     in use at exit: 72,704 bytes in 1 blocks
==735==   total heap usage: 309 allocs, 308 frees, 144,402 bytes allocated
==735== 
==735== LEAK SUMMARY:
==735==    definitely lost: 0 bytes in 0 blocks
==735==    indirectly lost: 0 bytes in 0 blocks
==735==      possibly lost: 0 bytes in 0 blocks
==735==    still reachable: 72,704 bytes in 1 blocks
==735==         suppressed: 0 bytes in 0 blocks
==735== Rerun with --leak-check=full to see details of leaked memory
==735== 
==735== For counts of detected and suppressed errors, rerun with: -v
==735== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 77
Branches executed:100.00% of 66
Taken at least once:81.82% of 66
Calls executed:84.21% of 19
Creating 'Collatz.c++.gcov'
