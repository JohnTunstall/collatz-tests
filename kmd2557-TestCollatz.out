==1869== Memcheck, a memory error detector
==1869== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==1869== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==1869== Command: ./TestCollatz
==1869== 
Running main() from gtest_main.cc
[==========] Running 20 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 20 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (29 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (4 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (6 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (3 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_flipped
[       OK ] CollatzFixture.eval_flipped (3 ms)
[ RUN      ] CollatzFixture.eval_same_number
[       OK ] CollatzFixture.eval_same_number (2 ms)
[ RUN      ] CollatzFixture.eval_max_range
[       OK ] CollatzFixture.eval_max_range (238 ms)
[ RUN      ] CollatzFixture.eval_equal_result
[       OK ] CollatzFixture.eval_equal_result (2 ms)
[ RUN      ] CollatzFixture.cycle_1
[       OK ] CollatzFixture.cycle_1 (3 ms)
[ RUN      ] CollatzFixture.cycle_2
[       OK ] CollatzFixture.cycle_2 (2 ms)
[ RUN      ] CollatzFixture.cycle_3
[       OK ] CollatzFixture.cycle_3 (2 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (8 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (4 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (4 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (6 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (3 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (4 ms)
[----------] 20 tests from CollatzFixture (367 ms total)

[----------] Global test environment tear-down
[==========] 20 tests from 1 test case ran. (434 ms total)
[  PASSED  ] 20 tests.
==1869== 
==1869== HEAP SUMMARY:
==1869==     in use at exit: 72,704 bytes in 1 blocks
==1869==   total heap usage: 323 allocs, 322 frees, 146,511 bytes allocated
==1869== 
==1869== LEAK SUMMARY:
==1869==    definitely lost: 0 bytes in 0 blocks
==1869==    indirectly lost: 0 bytes in 0 blocks
==1869==      possibly lost: 0 bytes in 0 blocks
==1869==    still reachable: 72,704 bytes in 1 blocks
==1869==         suppressed: 0 bytes in 0 blocks
==1869== Rerun with --leak-check=full to see details of leaked memory
==1869== 
==1869== For counts of detected and suppressed errors, rerun with: -v
==1869== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
