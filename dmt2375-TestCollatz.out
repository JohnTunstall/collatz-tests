==1836== Memcheck, a memory error detector
==1836== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==1836== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==1836== Command: ./TestCollatz
==1836== 
Running main() from gtest_main.cc
[==========] Running 17 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 17 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (26 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (7 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (6 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (9 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (4 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (3 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (5 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (14 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (50 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (12 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (8 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (3 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (2 ms)
[ RUN      ] CollatzFixture.print_4
[       OK ] CollatzFixture.print_4 (4 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (31 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (18 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (15 ms)
[----------] 17 tests from CollatzFixture (255 ms total)

[----------] Global test environment tear-down
[==========] 17 tests from 1 test case ran. (317 ms total)
[  PASSED  ] 17 tests.
==1836== 
==1836== HEAP SUMMARY:
==1836==     in use at exit: 72,704 bytes in 1 blocks
==1836==   total heap usage: 297 allocs, 296 frees, 142,870 bytes allocated
==1836== 
==1836== LEAK SUMMARY:
==1836==    definitely lost: 0 bytes in 0 blocks
==1836==    indirectly lost: 0 bytes in 0 blocks
==1836==      possibly lost: 0 bytes in 0 blocks
==1836==    still reachable: 72,704 bytes in 1 blocks
==1836==         suppressed: 0 bytes in 0 blocks
==1836== Rerun with --leak-check=full to see details of leaked memory
==1836== 
==1836== For counts of detected and suppressed errors, rerun with: -v
==1836== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:91.30% of 46
Branches executed:100.00% of 34
Taken at least once:82.35% of 34
Calls executed:100.00% of 13
Creating 'Collatz.c++.gcov'
