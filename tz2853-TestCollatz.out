==359== Memcheck, a memory error detector
==359== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==359== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==359== Command: ./TestCollatz
==359==
Running main() from gtest_main.cc
[==========] Running 18 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 18 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (25 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (4 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (5 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (4 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (47 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (9 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (5 ms)
[ RUN      ] CollatzFixture.eval_8
[       OK ] CollatzFixture.eval_8 (2 ms)
[ RUN      ] CollatzFixture.eval_9
[       OK ] CollatzFixture.eval_9 (10 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (8 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (3 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (2 ms)
[ RUN      ] CollatzFixture.print_4
[       OK ] CollatzFixture.print_4 (3 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (8 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (18 ms)
[----------] 18 tests from CollatzFixture (191 ms total)

[----------] Global test environment tear-down
[==========] 18 tests from 1 test case ran. (256 ms total)
[  PASSED  ] 18 tests.
==359==
==359== HEAP SUMMARY:
==359==     in use at exit: 72,704 bytes in 1 blocks
==359==   total heap usage: 299 allocs, 298 frees, 143,541 bytes allocated
==359==
==359== LEAK SUMMARY:
==359==    definitely lost: 0 bytes in 0 blocks
==359==    indirectly lost: 0 bytes in 0 blocks
==359==      possibly lost: 0 bytes in 0 blocks
==359==    still reachable: 72,704 bytes in 1 blocks
==359==         suppressed: 0 bytes in 0 blocks
==359== Rerun with --leak-check=full to see details of leaked memory
==359==
==359== For counts of detected and suppressed errors, rerun with: -v
==359== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:77.78% of 54
Branches executed:78.95% of 38
Taken at least once:65.79% of 38
Calls executed:100.00% of 14
Creating 'Collatz.c++.gcov'