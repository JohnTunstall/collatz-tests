==1428== Memcheck, a memory error detector
==1428== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==1428== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==1428== Command: ./TestCollatz
==1428== 
Running main() from gtest_main.cc
[==========] Running 13 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 13 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (21 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (39 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (70 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (37 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (308 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (169 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (10 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (110 ms)
[ RUN      ] CollatzFixture.eval_8
[       OK ] CollatzFixture.eval_8 (37 ms)
[ RUN      ] CollatzFixture.eval_9
[       OK ] CollatzFixture.eval_9 (82 ms)
[ RUN      ] CollatzFixture.eval_10
[       OK ] CollatzFixture.eval_10 (27 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (7 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (6 ms)
[----------] 13 tests from CollatzFixture (953 ms total)

[----------] Global test environment tear-down
[==========] 13 tests from 1 test case ran. (1005 ms total)
[  PASSED  ] 13 tests.
==1428== 
==1428== HEAP SUMMARY:
==1428==     in use at exit: 72,704 bytes in 1 blocks
==1428==   total heap usage: 258 allocs, 257 frees, 133,883 bytes allocated
==1428== 
==1428== LEAK SUMMARY:
==1428==    definitely lost: 0 bytes in 0 blocks
==1428==    indirectly lost: 0 bytes in 0 blocks
==1428==      possibly lost: 0 bytes in 0 blocks
==1428==    still reachable: 72,704 bytes in 1 blocks
==1428==         suppressed: 0 bytes in 0 blocks
==1428== Rerun with --leak-check=full to see details of leaked memory
==1428== 
==1428== For counts of detected and suppressed errors, rerun with: -v
==1428== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 33
Branches executed:100.00% of 24
Taken at least once:79.17% of 24
Calls executed:100.00% of 14
Creating 'Collatz.c++.gcov'
