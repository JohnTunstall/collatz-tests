==21== Memcheck, a memory error detector
==21== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==21== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==21== Command: ./TestCollatz
==21==
Running main() from gtest_main.cc
[==========] Running 20 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 20 tests from CollatzFixture
[ RUN      ] CollatzFixture.read1
[       OK ] CollatzFixture.read1 (24 ms)
[ RUN      ] CollatzFixture.read2
[       OK ] CollatzFixture.read2 (4 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (7 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (4 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.simple_eval_1
[       OK ] CollatzFixture.simple_eval_1 (5 ms)
[ RUN      ] CollatzFixture.simple_eval_2
[       OK ] CollatzFixture.simple_eval_2 (3 ms)
[ RUN      ] CollatzFixture.simple_eval_3
[       OK ] CollatzFixture.simple_eval_3 (22 ms)
[ RUN      ] CollatzFixture.optimized_eval_1
[       OK ] CollatzFixture.optimized_eval_1 (4 ms)
[ RUN      ] CollatzFixture.optimized_eval_2
[       OK ] CollatzFixture.optimized_eval_2 (5 ms)
[ RUN      ] CollatzFixture.optimized_eval_3
[       OK ] CollatzFixture.optimized_eval_3 (3 ms)
[ RUN      ] CollatzFixture.optimized_eval_4
[       OK ] CollatzFixture.optimized_eval_4 (7 ms)
[ RUN      ] CollatzFixture.print1
[       OK ] CollatzFixture.print1 (9 ms)
[ RUN      ] CollatzFixture.print2
[       OK ] CollatzFixture.print2 (4 ms)
[ RUN      ] CollatzFixture.solve1
[       OK ] CollatzFixture.solve1 (6 ms)
[ RUN      ] CollatzFixture.solve2
[       OK ] CollatzFixture.solve2 (6 ms)
[ RUN      ] CollatzFixture.solve3
[       OK ] CollatzFixture.solve3 (9 ms)
[ RUN      ] CollatzFixture.solve4
[       OK ] CollatzFixture.solve4 (8 ms)
[ RUN      ] CollatzFixture.solve5
[       OK ] CollatzFixture.solve5 (4 ms)
[ RUN      ] CollatzFixture.solve6
[       OK ] CollatzFixture.solve6 (4 ms)
[----------] 20 tests from CollatzFixture (159 ms total)

[----------] Global test environment tear-down
[==========] 20 tests from 1 test case ran. (217 ms total)
[  PASSED  ] 20 tests.
==21==
==21== HEAP SUMMARY:
==21==     in use at exit: 72,704 bytes in 1 blocks
==21==   total heap usage: 340 allocs, 339 frees, 148,132 bytes allocated
==21==
==21== LEAK SUMMARY:
==21==    definitely lost: 0 bytes in 0 blocks
==21==    indirectly lost: 0 bytes in 0 blocks
==21==      possibly lost: 0 bytes in 0 blocks
==21==    still reachable: 72,704 bytes in 1 blocks
==21==         suppressed: 0 bytes in 0 blocks
==21== Rerun with --leak-check=full to see details of leaked memory
==21==
==21== For counts of detected and suppressed errors, rerun with: -v
==21== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 46
Branches executed:100.00% of 44
Taken at least once:84.09% of 44
Calls executed:100.00% of 24
Creating 'Collatz.c++.gcov'
