==168== Memcheck, a memory error detector
==168== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==168== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==168== Command: ./TestCollatz
==168== 
Running main() from gtest_main.cc
[==========] Running 10 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 10 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (91 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (15 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (8 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (7 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (8 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (84 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (159 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (13 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (31 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (26 ms)
[----------] 10 tests from CollatzFixture (502 ms total)

[----------] Global test environment tear-down
[==========] 10 tests from 1 test case ran. (724 ms total)
[  PASSED  ] 10 tests.
==168== 
==168== HEAP SUMMARY:
==168==     in use at exit: 72,704 bytes in 1 blocks
==168==   total heap usage: 234 allocs, 233 frees, 129,492 bytes allocated
==168== 
==168== LEAK SUMMARY:
==168==    definitely lost: 0 bytes in 0 blocks
==168==    indirectly lost: 0 bytes in 0 blocks
==168==      possibly lost: 0 bytes in 0 blocks
==168==    still reachable: 72,704 bytes in 1 blocks
==168==         suppressed: 0 bytes in 0 blocks
==168== Rerun with --leak-check=full to see details of leaked memory
==168== 
==168== For counts of detected and suppressed errors, rerun with: -v
==168== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:92.68% of 41
Branches executed:100.00% of 30
Taken at least once:80.00% of 30
Calls executed:100.00% of 14
Creating 'Collatz.c++.gcov'
