==52== Memcheck, a memory error detector
==52== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==52== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==52== Command: ./TestCollatz
==52== 
Running main() from gtest_main.cc
[==========] Running 15 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 15 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (27 ms)
[ RUN      ] CollatzFixture.length_1
[       OK ] CollatzFixture.length_1 (3 ms)
[ RUN      ] CollatzFixture.length_2
[       OK ] CollatzFixture.length_2 (3 ms)
[ RUN      ] CollatzFixture.length_cache_1
[       OK ] CollatzFixture.length_cache_1 (2 ms)
[ RUN      ] CollatzFixture.length_cache_2
[       OK ] CollatzFixture.length_cache_2 (2 ms)
[ RUN      ] CollatzFixture.length_cache_3
[       OK ] CollatzFixture.length_cache_3 (3 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (4 ms)
[ RUN      ] CollatzFixture.eval_reverse_1
[       OK ] CollatzFixture.eval_reverse_1 (3 ms)
[ RUN      ] CollatzFixture.eval_reverse_2
[       OK ] CollatzFixture.eval_reverse_2 (2 ms)
[ RUN      ] CollatzFixture.cahce_1
[       OK ] CollatzFixture.cahce_1 (3 ms)
[ RUN      ] CollatzFixture.cahce_2
[       OK ] CollatzFixture.cahce_2 (5 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (12 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (7 ms)
[----------] 15 tests from CollatzFixture (122 ms total)

[----------] Global test environment tear-down
[==========] 15 tests from 1 test case ran. (194 ms total)
[  PASSED  ] 15 tests.
==52== 
==52== HEAP SUMMARY:
==52==     in use at exit: 72,704 bytes in 1 blocks
==52==   total heap usage: 269 allocs, 268 frees, 136,652 bytes allocated
==52== 
==52== LEAK SUMMARY:
==52==    definitely lost: 0 bytes in 0 blocks
==52==    indirectly lost: 0 bytes in 0 blocks
==52==      possibly lost: 0 bytes in 0 blocks
==52==    still reachable: 72,704 bytes in 1 blocks
==52==         suppressed: 0 bytes in 0 blocks
==52== Rerun with --leak-check=full to see details of leaked memory
==52== 
==52== For counts of detected and suppressed errors, rerun with: -v
==52== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 39
Branches executed:100.00% of 32
Taken at least once:81.25% of 32
Calls executed:87.50% of 16
Creating 'Collatz.c++.gcov'
