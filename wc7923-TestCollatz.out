==67== Memcheck, a memory error detector
==67== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==67== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==67== Command: ./TestCollatz
==67== 
Running main() from gtest_main.cc
[==========] Running 13 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 13 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (25 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (5 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (4 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (27 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (29 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (28 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (8 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (3 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (3 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (7 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (77 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (5 ms)
[----------] 13 tests from CollatzFixture (238 ms total)

[----------] Global test environment tear-down
[==========] 13 tests from 1 test case ran. (292 ms total)
[  PASSED  ] 13 tests.
==67== 
==67== HEAP SUMMARY:
==67==     in use at exit: 72,704 bytes in 1 blocks
==67==   total heap usage: 268 allocs, 267 frees, 136,207 bytes allocated
==67== 
==67== LEAK SUMMARY:
==67==    definitely lost: 0 bytes in 0 blocks
==67==    indirectly lost: 0 bytes in 0 blocks
==67==      possibly lost: 0 bytes in 0 blocks
==67==    still reachable: 72,704 bytes in 1 blocks
==67==         suppressed: 0 bytes in 0 blocks
==67== Rerun with --leak-check=full to see details of leaked memory
==67== 
==67== For counts of detected and suppressed errors, rerun with: -v
==67== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 31
Branches executed:100.00% of 28
Taken at least once:82.14% of 28
Calls executed:100.00% of 15
Creating 'Collatz.c++.gcov'