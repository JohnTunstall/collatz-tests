==742== Memcheck, a memory error detector
==742== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==742== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==742== Command: ./TestCollatz
==742== 
Running main() from gtest_main.cc
[==========] Running 18 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 18 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (19 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (4 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (3 ms)
[ RUN      ] CollatzFixture.recursiveCollatz_1
[       OK ] CollatzFixture.recursiveCollatz_1 (2 ms)
[ RUN      ] CollatzFixture.recursiveCollatz_2
[       OK ] CollatzFixture.recursiveCollatz_2 (2 ms)
[ RUN      ] CollatzFixture.recursiveCollatz_3
[       OK ] CollatzFixture.recursiveCollatz_3 (1 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (3 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (3 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (2 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (2 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (6 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (2 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (3 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (5 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (91 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (85 ms)
[----------] 18 tests from CollatzFixture (252 ms total)

[----------] Global test environment tear-down
[==========] 18 tests from 1 test case ran. (298 ms total)
[  PASSED  ] 18 tests.
==742== 
==742== HEAP SUMMARY:
==742==     in use at exit: 72,704 bytes in 1 blocks
==742==   total heap usage: 314 allocs, 313 frees, 143,875 bytes allocated
==742== 
==742== LEAK SUMMARY:
==742==    definitely lost: 0 bytes in 0 blocks
==742==    indirectly lost: 0 bytes in 0 blocks
==742==      possibly lost: 0 bytes in 0 blocks
==742==    still reachable: 72,704 bytes in 1 blocks
==742==         suppressed: 0 bytes in 0 blocks
==742== Rerun with --leak-check=full to see details of leaked memory
==742== 
==742== For counts of detected and suppressed errors, rerun with: -v
==742== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 36
Branches executed:100.00% of 28
Taken at least once:82.14% of 28
Calls executed:100.00% of 16
Creating 'Collatz.c++.gcov'
