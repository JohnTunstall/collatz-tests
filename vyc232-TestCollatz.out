==43== Memcheck, a memory error detector
==43== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==43== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==43== Command: ./TestCollatz
==43== 
Running main() from gtest_main.cc
[==========] Running 18 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 18 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (20 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (3 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (3 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (5 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (1 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (3 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (2 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (2 ms)
[ RUN      ] CollatzFixture.compute_cycle_length_1
[       OK ] CollatzFixture.compute_cycle_length_1 (2 ms)
[ RUN      ] CollatzFixture.compute_cycle_length_2
[       OK ] CollatzFixture.compute_cycle_length_2 (1 ms)
[ RUN      ] CollatzFixture.compute_cycle_length_3
[       OK ] CollatzFixture.compute_cycle_length_3 (2 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (6 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (2 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (3 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (5 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (3 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (3 ms)
[----------] 18 tests from CollatzFixture (95 ms total)

[----------] Global test environment tear-down
[==========] 18 tests from 1 test case ran. (144 ms total)
[  PASSED  ] 18 tests.
==43== 
==43== HEAP SUMMARY:
==43==     in use at exit: 72,704 bytes in 1 blocks
==43==   total heap usage: 311 allocs, 310 frees, 143,806 bytes allocated
==43== 
==43== LEAK SUMMARY:
==43==    definitely lost: 0 bytes in 0 blocks
==43==    indirectly lost: 0 bytes in 0 blocks
==43==      possibly lost: 0 bytes in 0 blocks
==43==    still reachable: 72,704 bytes in 1 blocks
==43==         suppressed: 0 bytes in 0 blocks
==43== Rerun with --leak-check=full to see details of leaked memory
==43== 
==43== For counts of detected and suppressed errors, rerun with: -v
==43== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 38
Branches executed:100.00% of 30
Taken at least once:76.67% of 30
Calls executed:100.00% of 18
Creating 'Collatz.c++.gcov'
