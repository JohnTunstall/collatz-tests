==20== Memcheck, a memory error detector
==20== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==20== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==20== Command: ./TestCollatz
==20== 
Running main() from gtest_main.cc
[==========] Running 15 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 15 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (19 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (1 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (7 ms)
[ RUN      ] CollatzFixture.cycle_length_1
[       OK ] CollatzFixture.cycle_length_1 (2 ms)
[ RUN      ] CollatzFixture.cycle_length_2
[       OK ] CollatzFixture.cycle_length_2 (2 ms)
[ RUN      ] CollatzFixture.cycle_length_3
[       OK ] CollatzFixture.cycle_length_3 (2 ms)
[ RUN      ] CollatzFixture.cycle_length_4
[       OK ] CollatzFixture.cycle_length_4 (2 ms)
[ RUN      ] CollatzFixture.cycle_length_5
[       OK ] CollatzFixture.cycle_length_5 (1 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (6 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (5 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (3 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (4 ms)
[----------] 15 tests from CollatzFixture (75 ms total)

[----------] Global test environment tear-down
[==========] 15 tests from 1 test case ran. (119 ms total)
[  PASSED  ] 15 tests.
==20== 
==20== HEAP SUMMARY:
==20==     in use at exit: 72,704 bytes in 1 blocks
==20==   total heap usage: 273 allocs, 272 frees, 137,228 bytes allocated
==20== 
==20== LEAK SUMMARY:
==20==    definitely lost: 0 bytes in 0 blocks
==20==    indirectly lost: 0 bytes in 0 blocks
==20==      possibly lost: 0 bytes in 0 blocks
==20==    still reachable: 72,704 bytes in 1 blocks
==20==         suppressed: 0 bytes in 0 blocks
==20== Rerun with --leak-check=full to see details of leaked memory
==20== 
==20== For counts of detected and suppressed errors, rerun with: -v
==20== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 44
Branches executed:100.00% of 44
Taken at least once:79.55% of 44
Calls executed:88.89% of 18
Creating 'Collatz.c++.gcov'
